//getValue and setValue for singleline text/multiline text field







function SetAttributeValue(executionContext)
{
	var formContext = executionContext.getFormContext();
	var StudentName = formContext.getAttribute("crb7d_name").getValue();
	if (StudentName.toLowerCase() == "navya")
	{
		formContext.getAttribute("crb7d_email").setValue("navya@gmail.com")
	}
}







// getValue and setValue for two select option
// it returns boolean value

function DoYouhavePan(executionContext)
{
	var formContext = executionContext.getFormContext();
	var doyouhavepan = formContext.getAttribute("crb7d_doyouhavepan").getValue();
	if (doyouhavepan == false)
	{
		formContext.getAttribute("crb7d_doyouhavepan").setValue(true)
	}
}







// For option set we have two set function(setValue and setText) and two get function(getValue and getText) 
// getText return string
// getValue return number
// setText and getText 
function optionsetText(executionContext)
{
	var formContext = executionContext.getFormContext();
	var department = formContext.getAttribute("crb7d_department").getText();
	if (department == "Civil")
	{
		formContext.getAttribute("crb7d_department").setText("Computer")
	}
}






//setValue and getValue 
function OptionsetValue(executionContext)
{
	var formContext = executionContext.getFormContext();
	var department = formContext.getAttribute("crb7d_class").getValue();
	var text = "Power Automate";
	var optionSetValues = formContext.getAttribute("crb7d_class").getOptions();   //getOptions() return array of options
	for (i = 0; i < optionSetValues.length; i++)
	{
		if (optionSetValues[i].text == text)
		{
			formContext.getAttribute("crb7d_class").setValue(optionSetValues[i].value)
		}
	}
}






// for all the numberfields(decimal,float,whole) we have setValue() and getValue()
//for Decimal number field
function DecimalNumber(executionContext)
{
	var formContext = executionContext.getFormContext();
	var fees = formContext.getAttribute("crb7d_fees").getValue();
	if (fees == null)
	{
		formContext.getAttribute("crb7d_fees").setValue(40000)
	}
}





//for Whole Number field
function WholeNumber(executionContext)
{
	var formContext = executionContext.getFormContext();
	var WholeNum = formContext.getAttribute("xxx").getValue();
	if (WholeNum == null)
	{
		formContext.getAttribute("xxx").setValue(4)
	}
}




// for float Number field
function floatNumber(executionContext)
{
	var formContext = executionContext.getFormContext();
	var floatNum = formContext.getAttribute("xxx").getValue();
	if (floatNum == null)
	{
		formContext.getAttribute("xxx").setValue(4)
	}
}






// setValue() and getValue() for date field
function datefield(executionContext)
{
	var formContext = executionContext.getFormContext();
	var todayDateOnly = new Date().toDateString(); // using new Date() function we can assign current date and time to variable // new Date().toDateString() for current date only
	var admissiondate = formContext.getAttribute("crb7d_admissiondate").getValue();
	if (admissiondate == null)
	{
		formContext.getAttribute("crb7d_admissiondate").setValue(todayDateOnly)
	}
}






// for currency field
function currencyfield(executionContext)
{
	var formContext = executionContext.getFormContext();
	var amount = formContext.getAttribute("xxx").getValue(); // I do not have currency field in my entity, make sure to change schema name here
	if (amount == null)
	{
		formContext.getAttribute("xxx").setValue(576.58)
	}
}






// for multiselect option field we have two setter(setValue,setText) funtions and two getter(getValue,getText) function
//get function returns array of options
function multiselectoptionsetText(executionContext)
{
	var formContext = executionContext.getFormContext();
	var associateclass = formContext.getAttribute("crb7d_associateclass").getText();
	var optionset = formcontext.getAttribute("crb7d_associateclass").getOptions();
	for (i = 0; i < optionset.length; i++)
	{
		if (optionset[i] == "First class")
		{
			formContext.getAttribute("crb7d_associateclass").setText("final year")
		}
	}
}






// for lookup field we have two setter(setValue,setText) funtions and two getter(getValue,getText) function
function lookupfield(executionContext)
{
	var formContext = executionContext.getFormContext();
	var parentname = formContext.getAttribute("crb7d_parents").getValue()[0].name;			// formContext.getAttribute("crb7d_parents"): This gets the parent lookup field/attribute from the formContext.
													// .getValue(): This method retrieves the value of the attribute. it returns an array of parent records.
													// [0]: This accesses the first element(first parent record) of the array returned by getValue().
													// .name: This accesses the "name" property of the first parent record/element.
	// to set lookup value we need to create array 
	var newparent = new Array(); // newparent array is created
	newparent[0] = new Object(); // One object is created at first index of newparent index
	newparent[0].name = "maya"; // name property of object/record
	newparent[0].id = "c4e62c68-62fd-ee11-9f89-0022486e5154"; //guid of record
	newparent[0].entitytype = "parent"; // entity type of the record
	if (parentname == undefine)
	{
		formContext.getAttribute("crb7d_parents").setValue(newparent)      // if the lookup field is empty newparent record will assign
	}
	else
	{
		alert(parentname)     // else parent name will be popup
	}
};
